@using Velstand.Models
@using Velstand.Constants
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "VelstandWrapper.cshtml";
}
@section VelstandHead
{
}
@section VelstandBody
{
    <div class="col s12">
		@Html.Partial("VelstandBreadCrumb")
	</div>
    @* Render the sitemap by passing the root node to the traverse helper *@
    <section class="MainContent col s12">
        <article class="Single-Post Post collection">
            <div class="collection-item">
                <h1 class="Post-Title">@Umbraco.Field("title")</h1>
                <ul class="Level-List">
                    @Traverse(CurrentPage.VRoot())
                </ul>
            </div>
        </article>
		
					
        @* Google Adsense x 2 *@
		<div class="row">
			<div class="col s12 m6">
        		@Umbraco.RenderMacro("VelstandWidgetGoogleAdsense")
			</div>
			<div class="col s12 m6">
        		@Umbraco.RenderMacro("VelstandWidgetGoogleAdsense")
			</div>
		</div>
    </section>
}
@* Helper method to travers through all descendants *@
@helper Traverse(IPublishedContent node)
{
    @* Select visible children *@
    var items = node.Children.Where(x => !x.DocumentTypeAlias.StartsWith(VelstandPrefix.PrivateItem)
                                                          && !x.DocumentTypeAlias.StartsWith(VelstandPrefix.Error));

                                                        @* If any items are returned, render a list *@
    if (items.Any())
    {
        foreach (var item in items)
        {
            <li class="Level-@item.Level">
                @if (item.DocumentTypeAlias.StartsWith(VelstandPrefix.Content))
                {
                    <i class="mdi-editor-insert-drive-file"></i>
                    }
                    else
                    {
                    <i class="mdi-file-folder-open"></i>
                }
                <a href="@item.Url">@Umbraco.Field(item, "title", altText: item.Name)</a>
                @* Run the traverse helper again *@
                @Traverse(item)
            </li>
        }
    }
}